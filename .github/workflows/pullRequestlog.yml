# This workflow searches for all pull requests (PRs) and adds them to a Pull Requests Log file. The changes are then committed and pushed back to the repository.
name: 📝 Update Pull Requests Log

on:
  push:
    branches:
      - '*'
  schedule:
    - cron: '0 9 * * 1' # At 12:00 MST on Wednesday https://crontab.guru/

jobs:
  pr_log:
    runs-on: ubuntu-latest
    env:
      TZ: 'America/Edmonton'
      PR_LOG_PATH: docs
      PR_LOG_NAME: PULLREQUESTLOG.md
      BASE_BRANCH: main
      REVIEWERS: lkcozy
      LABELS: weeklyreport,documentation
    steps:
      - name: Checkout Repository
        uses: actions/checkout@main

      - name: 🔍 Fetch Eligible PRs
        run: |
          # example start_datetime="2021-01-01T19:00:00Z"
          start_datetime=$(date -d "7 days ago" "+%Y-%m-%dT%H:%M:%SZ")
          echo $start_datetime
          search_query="is:pr merged:>$start_datetime -author:app/dependabot"
          merged_prs=$(
            gh pr list \
              --base $BASE_BRANCH \
              --search "$search_query" \
              --json author,title,url \
          )
          echo "merged_prs=$merged_prs" >> "$GITHUB_ENV"
          echo "$merged_prs"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: 📝 Update PRs Log
        if: ${{ env.merged_prs }}
        run: |
          prs=$(echo "$merged_prs" | jq -c '.[]')
          echo "$prs"

          pr_log_name="$PR_LOG_PATH/$PR_LOG_NAME"
          temp_file_name="temp"

          mkdir -p "$PR_LOG_PATH"
          touch "$pr_log_name"

          echo -e "$(date +'## %Y-%m-%d (Week %V)')\n" >$temp_file_name
          counter=1
          while read -r line; do
              author=$(echo "$line" | jq -r '.author.login')
              title=$(echo "$line" | jq -r '.title')
              url=$(echo "$line" | jq -r '.url')
              echo "$counter. [$title]($url) @$author" >>$temp_file_name
              ((counter++))
          done <<<"$prs"

          {
          echo 'report_contents<<EOF'
          cat $temp_file_name
          echo EOF
          } >> "$GITHUB_ENV"

          echo -e "" >>$temp_file_name
          cat $pr_log_name >>$temp_file_name
          mv $temp_file_name $pr_log_name

          echo "commit_required=true" >> "$GITHUB_ENV"

      - name: ⌨️ Commit and Push Changes
        if: ${{ env.commit_required == 'true' }}
        run: |
          weekno=$(date +'%Y-%V')
          branch="weekly-report-$weekno"
          git checkout -b $branch
          git config user.name "weekly-report[bot]"
          git config user.email "weekly-report[bot]@noreply.github.com"
          git add "$PR_LOG_PATH/$PR_LOG_NAME"
          git commit -m "docs: update weekly prs report $weekno"
          git push origin -f $branch

          echo "weekno=$weekno" >> "$GITHUB_ENV"

        env:
          GH_TOKEN: ${{ github.token }}

      - name: 🚀 Generate The PR With Reviewers And Labels
        if: ${{ env.weekno }}
        run: |
          command="gh pr create --title '[$weekno] Update Weekly Pull Requests Report' --body '$report_contents'"

          for reviewer in "${REVIEWERS[@]}"; do
            command+=" --reviewer $reviewer"
          done

          for label in "${LABELS[@]}"; do
            command+=" --label $label"
          done

          echo $command
          eval "$command"

        env:
          GH_TOKEN: ${{ github.token }}
